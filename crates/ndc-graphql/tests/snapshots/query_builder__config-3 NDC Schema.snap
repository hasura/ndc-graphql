---
source: crates/ndc-graphql/tests/query_builder.rs
assertion_line: 105
expression: schema
---
scalar_types:
  Album_constraint:
    representation:
      type: enum
      one_of:
        - PK_Album
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Album_select_column:
    representation:
      type: enum
      one_of:
        - AlbumId
        - ArtistId
        - Title
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Album_update_column:
    representation:
      type: enum
      one_of:
        - ArtistId
        - Title
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Artist_constraint:
    representation:
      type: enum
      one_of:
        - PK_Artist
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Artist_select_column:
    representation:
      type: enum
      one_of:
        - ArtistId
        - Name
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Artist_update_column:
    representation:
      type: enum
      one_of:
        - Name
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Boolean:
    representation:
      type: boolean
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Customer_constraint:
    representation:
      type: enum
      one_of:
        - PK_Customer
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Customer_select_column:
    representation:
      type: enum
      one_of:
        - Address
        - City
        - Company
        - Country
        - CustomerId
        - Email
        - Fax
        - FirstName
        - LastName
        - Phone
        - PostalCode
        - State
        - SupportRepId
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Customer_update_column:
    representation:
      type: enum
      one_of:
        - Address
        - City
        - Company
        - Country
        - Email
        - Fax
        - FirstName
        - LastName
        - Phone
        - PostalCode
        - State
        - SupportRepId
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Employee_constraint:
    representation:
      type: enum
      one_of:
        - PK_Employee
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Employee_select_column:
    representation:
      type: enum
      one_of:
        - Address
        - BirthDate
        - City
        - Country
        - Email
        - EmployeeId
        - Fax
        - FirstName
        - HireDate
        - LastName
        - Phone
        - PostalCode
        - ReportsTo
        - State
        - Title
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Employee_update_column:
    representation:
      type: enum
      one_of:
        - Address
        - BirthDate
        - City
        - Country
        - Email
        - Fax
        - FirstName
        - HireDate
        - LastName
        - Phone
        - PostalCode
        - ReportsTo
        - State
        - Title
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Float:
    representation:
      type: float64
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Genre_constraint:
    representation:
      type: enum
      one_of:
        - PK_Genre
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Genre_select_column:
    representation:
      type: enum
      one_of:
        - GenreId
        - Name
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Genre_update_column:
    representation:
      type: enum
      one_of:
        - Name
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Int:
    representation:
      type: int32
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  InvoiceLine_constraint:
    representation:
      type: enum
      one_of:
        - PK_InvoiceLine
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  InvoiceLine_select_column:
    representation:
      type: enum
      one_of:
        - InvoiceId
        - InvoiceLineId
        - Quantity
        - TrackId
        - UnitPrice
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  InvoiceLine_update_column:
    representation:
      type: enum
      one_of:
        - InvoiceId
        - Quantity
        - TrackId
        - UnitPrice
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Invoice_constraint:
    representation:
      type: enum
      one_of:
        - PK_Invoice
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Invoice_select_column:
    representation:
      type: enum
      one_of:
        - BillingAddress
        - BillingCity
        - BillingCountry
        - BillingPostalCode
        - BillingState
        - CustomerId
        - InvoiceDate
        - InvoiceId
        - Total
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Invoice_update_column:
    representation:
      type: enum
      one_of:
        - BillingAddress
        - BillingCity
        - BillingCountry
        - BillingPostalCode
        - BillingState
        - CustomerId
        - InvoiceDate
        - Total
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  MediaType_constraint:
    representation:
      type: enum
      one_of:
        - PK_MediaType
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  MediaType_select_column:
    representation:
      type: enum
      one_of:
        - MediaTypeId
        - Name
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  MediaType_update_column:
    representation:
      type: enum
      one_of:
        - Name
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  PlaylistTrack_constraint:
    representation:
      type: enum
      one_of:
        - PK_PlaylistTrack
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  PlaylistTrack_select_column:
    representation:
      type: enum
      one_of:
        - PlaylistId
        - TrackId
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  PlaylistTrack_update_column:
    representation:
      type: enum
      one_of:
        - PlaylistId
        - TrackId
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Playlist_constraint:
    representation:
      type: enum
      one_of:
        - PK_Playlist
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Playlist_select_column:
    representation:
      type: enum
      one_of:
        - Name
        - PlaylistId
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Playlist_update_column:
    representation:
      type: enum
      one_of:
        - Name
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  String:
    representation:
      type: string
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Track_constraint:
    representation:
      type: enum
      one_of:
        - PK_Track
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Track_select_column:
    representation:
      type: enum
      one_of:
        - AlbumId
        - Bytes
        - Composer
        - GenreId
        - MediaTypeId
        - Milliseconds
        - Name
        - TrackId
        - UnitPrice
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  Track_update_column:
    representation:
      type: enum
      one_of:
        - AlbumId
        - Bytes
        - Composer
        - GenreId
        - MediaTypeId
        - Milliseconds
        - Name
        - UnitPrice
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  _HeaderMap:
    representation:
      type: json
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  cursor_ordering:
    representation:
      type: enum
      one_of:
        - ASC
        - DESC
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  numeric:
    representation:
      type: json
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  order_by:
    representation:
      type: enum
      one_of:
        - asc
        - asc_nulls_first
        - asc_nulls_last
        - desc
        - desc_nulls_first
        - desc_nulls_last
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
  timestamp:
    representation:
      type: json
    aggregate_functions: {}
    comparison_operators: {}
    extraction_functions: {}
object_types:
  Album:
    description: "columns and relationships of \"Album\""
    fields:
      AlbumId:
        type:
          type: named
          name: Int
      Artist:
        description: An object relationship
        type:
          type: named
          name: Artist
      ArtistId:
        type:
          type: named
          name: Int
      Title:
        type:
          type: named
          name: String
      Tracks:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: Track
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Track_bool_exp
      Tracks_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: Track_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Track_bool_exp
    foreign_keys: {}
  Album_aggregate:
    description: "aggregated selection of \"Album\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: Album
    foreign_keys: {}
  Album_aggregate_bool_exp:
    fields:
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_aggregate_bool_exp_count
    foreign_keys: {}
  Album_aggregate_bool_exp_count:
    fields:
      arguments:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Album_select_column
      distinct:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      filter:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_bool_exp
      predicate:
        type:
          type: named
          name: Int_comparison_exp
    foreign_keys: {}
  Album_aggregate_fields:
    description: "aggregate fields of \"Album\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Album_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_variance_fields
    foreign_keys: {}
  Album_aggregate_order_by:
    description: "order by aggregate values of table \"Album\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_avg_order_by
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_max_order_by
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_min_order_by
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_stddev_order_by
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_stddev_pop_order_by
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_stddev_samp_order_by
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_sum_order_by
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_var_pop_order_by
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_var_samp_order_by
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_variance_order_by
    foreign_keys: {}
  Album_arr_rel_insert_input:
    description: "input type for inserting array relation for remote table \"Album\""
    fields:
      data:
        type:
          type: array
          element_type:
            type: named
            name: Album_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_on_conflict
    foreign_keys: {}
  Album_avg_fields:
    description: aggregate avg on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Album_avg_order_by:
    description: "order by avg() on columns of table \"Album\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Album_bool_exp:
    description: "Boolean expression to filter rows from the table \"Album\". All fields are combined with a logical 'AND'."
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Artist:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_bool_exp
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Tracks:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_bool_exp
      Tracks_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_aggregate_bool_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Album_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Album_bool_exp
    foreign_keys: {}
  Album_inc_input:
    description: "input type for incrementing numeric columns in table \"Album\""
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Album_insert_input:
    description: "input type for inserting data into table \"Album\""
    fields:
      Artist:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_obj_rel_insert_input
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Tracks:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_arr_rel_insert_input
    foreign_keys: {}
  Album_max_fields:
    description: aggregate max on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Album_max_order_by:
    description: "order by max() on columns of table \"Album\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Album_min_fields:
    description: aggregate min on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Album_min_order_by:
    description: "order by min() on columns of table \"Album\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Album_mutation_response:
    description: "response of any mutation on the table \"Album\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: Album
    foreign_keys: {}
  Album_obj_rel_insert_input:
    description: "input type for inserting object relation for remote table \"Album\""
    fields:
      data:
        type:
          type: named
          name: Album_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_on_conflict
    foreign_keys: {}
  Album_on_conflict:
    description: "on_conflict condition type for table \"Album\""
    fields:
      constraint:
        type:
          type: named
          name: Album_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: Album_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_bool_exp
    foreign_keys: {}
  Album_order_by:
    description: "Ordering options when selecting data from \"Album\"."
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Artist:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Tracks_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_aggregate_order_by
    foreign_keys: {}
  Album_pk_columns_input:
    description: "primary key columns input for table: Album"
    fields:
      AlbumId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  Album_set_input:
    description: "input type for updating data in table \"Album\""
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Album_stddev_fields:
    description: aggregate stddev on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Album_stddev_order_by:
    description: "order by stddev() on columns of table \"Album\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Album_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Album_stddev_pop_order_by:
    description: "order by stddev_pop() on columns of table \"Album\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Album_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Album_stddev_samp_order_by:
    description: "order by stddev_samp() on columns of table \"Album\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Album_stream_cursor_input:
    description: "Streaming cursor of the table \"Album\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: Album_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  Album_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Album_sum_fields:
    description: aggregate sum on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Album_sum_order_by:
    description: "order by sum() on columns of table \"Album\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Album_updates:
    fields:
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Album_bool_exp
    foreign_keys: {}
  Album_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Album_var_pop_order_by:
    description: "order by var_pop() on columns of table \"Album\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Album_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Album_var_samp_order_by:
    description: "order by var_samp() on columns of table \"Album\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Album_variance_fields:
    description: aggregate variance on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Album_variance_order_by:
    description: "order by variance() on columns of table \"Album\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Artist:
    description: "columns and relationships of \"Artist\""
    fields:
      Albums:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: Album
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Album_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Album_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Album_bool_exp
      Albums_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: Album_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Album_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Album_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Album_bool_exp
      ArtistId:
        type:
          type: named
          name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Artist_aggregate:
    description: "aggregated selection of \"Artist\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: Artist
    foreign_keys: {}
  Artist_aggregate_fields:
    description: "aggregate fields of \"Artist\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Artist_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_variance_fields
    foreign_keys: {}
  Artist_avg_fields:
    description: aggregate avg on columns
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Artist_bool_exp:
    description: "Boolean expression to filter rows from the table \"Artist\". All fields are combined with a logical 'AND'."
    fields:
      Albums:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_bool_exp
      Albums_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_aggregate_bool_exp
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Artist_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Artist_bool_exp
    foreign_keys: {}
  Artist_insert_input:
    description: "input type for inserting data into table \"Artist\""
    fields:
      Albums:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_arr_rel_insert_input
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Artist_max_fields:
    description: aggregate max on columns
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Artist_min_fields:
    description: aggregate min on columns
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Artist_mutation_response:
    description: "response of any mutation on the table \"Artist\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: Artist
    foreign_keys: {}
  Artist_obj_rel_insert_input:
    description: "input type for inserting object relation for remote table \"Artist\""
    fields:
      data:
        type:
          type: named
          name: Artist_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_on_conflict
    foreign_keys: {}
  Artist_on_conflict:
    description: "on_conflict condition type for table \"Artist\""
    fields:
      constraint:
        type:
          type: named
          name: Artist_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: Artist_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_bool_exp
    foreign_keys: {}
  Artist_order_by:
    description: "Ordering options when selecting data from \"Artist\"."
    fields:
      Albums_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_aggregate_order_by
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Artist_pk_columns_input:
    description: "primary key columns input for table: Artist"
    fields:
      ArtistId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  Artist_set_input:
    description: "input type for updating data in table \"Artist\""
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Artist_stddev_fields:
    description: aggregate stddev on columns
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Artist_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Artist_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Artist_stream_cursor_input:
    description: "Streaming cursor of the table \"Artist\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: Artist_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  Artist_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Artist_sum_fields:
    description: aggregate sum on columns
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Artist_updates:
    fields:
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Artist_bool_exp
    foreign_keys: {}
  Artist_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Artist_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Artist_variance_fields:
    description: aggregate variance on columns
    fields:
      ArtistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Customer:
    description: "columns and relationships of \"Customer\""
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Company:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      CustomerId:
        type:
          type: named
          name: Int
      Email:
        type:
          type: named
          name: String
      Employee:
        description: An object relationship
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: named
          name: String
      Invoices:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: Invoice
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Invoice_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Invoice_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Invoice_bool_exp
      Invoices_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: Invoice_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Invoice_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Invoice_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Invoice_bool_exp
      LastName:
        type:
          type: named
          name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Customer_aggregate:
    description: "aggregated selection of \"Customer\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: Customer
    foreign_keys: {}
  Customer_aggregate_bool_exp:
    fields:
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_aggregate_bool_exp_count
    foreign_keys: {}
  Customer_aggregate_bool_exp_count:
    fields:
      arguments:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Customer_select_column
      distinct:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      filter:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_bool_exp
      predicate:
        type:
          type: named
          name: Int_comparison_exp
    foreign_keys: {}
  Customer_aggregate_fields:
    description: "aggregate fields of \"Customer\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Customer_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_variance_fields
    foreign_keys: {}
  Customer_aggregate_order_by:
    description: "order by aggregate values of table \"Customer\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_avg_order_by
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_max_order_by
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_min_order_by
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_stddev_order_by
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_stddev_pop_order_by
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_stddev_samp_order_by
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_sum_order_by
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_var_pop_order_by
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_var_samp_order_by
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_variance_order_by
    foreign_keys: {}
  Customer_arr_rel_insert_input:
    description: "input type for inserting array relation for remote table \"Customer\""
    fields:
      data:
        type:
          type: array
          element_type:
            type: named
            name: Customer_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_on_conflict
    foreign_keys: {}
  Customer_avg_fields:
    description: aggregate avg on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Customer_avg_order_by:
    description: "order by avg() on columns of table \"Customer\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Customer_bool_exp:
    description: "Boolean expression to filter rows from the table \"Customer\". All fields are combined with a logical 'AND'."
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Company:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Employee:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_bool_exp
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Invoices:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_bool_exp
      Invoices_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_aggregate_bool_exp
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Customer_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Customer_bool_exp
    foreign_keys: {}
  Customer_inc_input:
    description: "input type for incrementing numeric columns in table \"Customer\""
    fields:
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Customer_insert_input:
    description: "input type for inserting data into table \"Customer\""
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Company:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Employee:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_obj_rel_insert_input
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Invoices:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_arr_rel_insert_input
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Customer_max_fields:
    description: aggregate max on columns
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Company:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Customer_max_order_by:
    description: "order by max() on columns of table \"Customer\""
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Company:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Customer_min_fields:
    description: aggregate min on columns
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Company:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Customer_min_order_by:
    description: "order by min() on columns of table \"Customer\""
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Company:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Customer_mutation_response:
    description: "response of any mutation on the table \"Customer\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: Customer
    foreign_keys: {}
  Customer_obj_rel_insert_input:
    description: "input type for inserting object relation for remote table \"Customer\""
    fields:
      data:
        type:
          type: named
          name: Customer_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_on_conflict
    foreign_keys: {}
  Customer_on_conflict:
    description: "on_conflict condition type for table \"Customer\""
    fields:
      constraint:
        type:
          type: named
          name: Customer_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: Customer_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_bool_exp
    foreign_keys: {}
  Customer_order_by:
    description: "Ordering options when selecting data from \"Customer\"."
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Company:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Employee:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_order_by
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Invoices_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_aggregate_order_by
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Customer_pk_columns_input:
    description: "primary key columns input for table: Customer"
    fields:
      CustomerId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  Customer_set_input:
    description: "input type for updating data in table \"Customer\""
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Company:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Customer_stddev_fields:
    description: aggregate stddev on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Customer_stddev_order_by:
    description: "order by stddev() on columns of table \"Customer\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Customer_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Customer_stddev_pop_order_by:
    description: "order by stddev_pop() on columns of table \"Customer\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Customer_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Customer_stddev_samp_order_by:
    description: "order by stddev_samp() on columns of table \"Customer\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Customer_stream_cursor_input:
    description: "Streaming cursor of the table \"Customer\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: Customer_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  Customer_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Company:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Customer_sum_fields:
    description: aggregate sum on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Customer_sum_order_by:
    description: "order by sum() on columns of table \"Customer\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Customer_updates:
    fields:
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Customer_bool_exp
    foreign_keys: {}
  Customer_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Customer_var_pop_order_by:
    description: "order by var_pop() on columns of table \"Customer\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Customer_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Customer_var_samp_order_by:
    description: "order by var_samp() on columns of table \"Customer\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Customer_variance_fields:
    description: aggregate variance on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Customer_variance_order_by:
    description: "order by variance() on columns of table \"Customer\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      SupportRepId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee:
    description: "columns and relationships of \"Employee\""
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BirthDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Customers:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: Customer
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Customer_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Customer_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Customer_bool_exp
      Customers_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: Customer_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Customer_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Customer_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Customer_bool_exp
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Employee:
        description: An object relationship
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee
      EmployeeId:
        type:
          type: named
          name: Int
      Employees:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: Employee
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Employee_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Employee_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Employee_bool_exp
      Employees_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: Employee_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Employee_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Employee_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Employee_bool_exp
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: named
          name: String
      HireDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      LastName:
        type:
          type: named
          name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Employee_aggregate:
    description: "aggregated selection of \"Employee\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: Employee
    foreign_keys: {}
  Employee_aggregate_bool_exp:
    fields:
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_aggregate_bool_exp_count
    foreign_keys: {}
  Employee_aggregate_bool_exp_count:
    fields:
      arguments:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Employee_select_column
      distinct:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      filter:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_bool_exp
      predicate:
        type:
          type: named
          name: Int_comparison_exp
    foreign_keys: {}
  Employee_aggregate_fields:
    description: "aggregate fields of \"Employee\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Employee_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_variance_fields
    foreign_keys: {}
  Employee_aggregate_order_by:
    description: "order by aggregate values of table \"Employee\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_avg_order_by
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_max_order_by
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_min_order_by
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_stddev_order_by
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_stddev_pop_order_by
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_stddev_samp_order_by
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_sum_order_by
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_var_pop_order_by
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_var_samp_order_by
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_variance_order_by
    foreign_keys: {}
  Employee_arr_rel_insert_input:
    description: "input type for inserting array relation for remote table \"Employee\""
    fields:
      data:
        type:
          type: array
          element_type:
            type: named
            name: Employee_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_on_conflict
    foreign_keys: {}
  Employee_avg_fields:
    description: aggregate avg on columns
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Employee_avg_order_by:
    description: "order by avg() on columns of table \"Employee\""
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee_bool_exp:
    description: "Boolean expression to filter rows from the table \"Employee\". All fields are combined with a logical 'AND'."
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      BirthDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp_comparison_exp
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Customers:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_bool_exp
      Customers_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_aggregate_bool_exp
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Employee:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_bool_exp
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Employees:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_bool_exp
      Employees_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_aggregate_bool_exp
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      HireDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp_comparison_exp
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Employee_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Employee_bool_exp
    foreign_keys: {}
  Employee_inc_input:
    description: "input type for incrementing numeric columns in table \"Employee\""
    fields:
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Employee_insert_input:
    description: "input type for inserting data into table \"Employee\""
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BirthDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Customers:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_arr_rel_insert_input
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Employee:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_obj_rel_insert_input
      Employees:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_arr_rel_insert_input
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      HireDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Employee_max_fields:
    description: aggregate max on columns
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BirthDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      HireDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Employee_max_order_by:
    description: "order by max() on columns of table \"Employee\""
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BirthDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      HireDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee_min_fields:
    description: aggregate min on columns
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BirthDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      HireDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Employee_min_order_by:
    description: "order by min() on columns of table \"Employee\""
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BirthDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      HireDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee_mutation_response:
    description: "response of any mutation on the table \"Employee\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: Employee
    foreign_keys: {}
  Employee_obj_rel_insert_input:
    description: "input type for inserting object relation for remote table \"Employee\""
    fields:
      data:
        type:
          type: named
          name: Employee_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_on_conflict
    foreign_keys: {}
  Employee_on_conflict:
    description: "on_conflict condition type for table \"Employee\""
    fields:
      constraint:
        type:
          type: named
          name: Employee_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: Employee_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_bool_exp
    foreign_keys: {}
  Employee_order_by:
    description: "Ordering options when selecting data from \"Employee\"."
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BirthDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Customers_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_aggregate_order_by
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Employee:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_order_by
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Employees_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_aggregate_order_by
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      HireDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee_pk_columns_input:
    description: "primary key columns input for table: Employee"
    fields:
      EmployeeId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  Employee_set_input:
    description: "input type for updating data in table \"Employee\""
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BirthDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      HireDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Employee_stddev_fields:
    description: aggregate stddev on columns
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Employee_stddev_order_by:
    description: "order by stddev() on columns of table \"Employee\""
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Employee_stddev_pop_order_by:
    description: "order by stddev_pop() on columns of table \"Employee\""
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Employee_stddev_samp_order_by:
    description: "order by stddev_samp() on columns of table \"Employee\""
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee_stream_cursor_input:
    description: "Streaming cursor of the table \"Employee\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: Employee_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  Employee_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      Address:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BirthDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      City:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Country:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Email:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Fax:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      FirstName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      HireDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      LastName:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Phone:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      State:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Title:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Employee_sum_fields:
    description: aggregate sum on columns
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Employee_sum_order_by:
    description: "order by sum() on columns of table \"Employee\""
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee_updates:
    fields:
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Employee_bool_exp
    foreign_keys: {}
  Employee_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Employee_var_pop_order_by:
    description: "order by var_pop() on columns of table \"Employee\""
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Employee_var_samp_order_by:
    description: "order by var_samp() on columns of table \"Employee\""
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Employee_variance_fields:
    description: aggregate variance on columns
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Employee_variance_order_by:
    description: "order by variance() on columns of table \"Employee\""
    fields:
      EmployeeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      ReportsTo:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Genre:
    description: "columns and relationships of \"Genre\""
    fields:
      GenreId:
        type:
          type: named
          name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Tracks:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: Track
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Track_bool_exp
      Tracks_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: Track_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Track_bool_exp
    foreign_keys: {}
  Genre_aggregate:
    description: "aggregated selection of \"Genre\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: Genre
    foreign_keys: {}
  Genre_aggregate_fields:
    description: "aggregate fields of \"Genre\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Genre_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_variance_fields
    foreign_keys: {}
  Genre_avg_fields:
    description: aggregate avg on columns
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Genre_bool_exp:
    description: "Boolean expression to filter rows from the table \"Genre\". All fields are combined with a logical 'AND'."
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Tracks:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_bool_exp
      Tracks_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_aggregate_bool_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Genre_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Genre_bool_exp
    foreign_keys: {}
  Genre_insert_input:
    description: "input type for inserting data into table \"Genre\""
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Tracks:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_arr_rel_insert_input
    foreign_keys: {}
  Genre_max_fields:
    description: aggregate max on columns
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Genre_min_fields:
    description: aggregate min on columns
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Genre_mutation_response:
    description: "response of any mutation on the table \"Genre\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: Genre
    foreign_keys: {}
  Genre_obj_rel_insert_input:
    description: "input type for inserting object relation for remote table \"Genre\""
    fields:
      data:
        type:
          type: named
          name: Genre_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_on_conflict
    foreign_keys: {}
  Genre_on_conflict:
    description: "on_conflict condition type for table \"Genre\""
    fields:
      constraint:
        type:
          type: named
          name: Genre_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: Genre_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_bool_exp
    foreign_keys: {}
  Genre_order_by:
    description: "Ordering options when selecting data from \"Genre\"."
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Tracks_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_aggregate_order_by
    foreign_keys: {}
  Genre_pk_columns_input:
    description: "primary key columns input for table: Genre"
    fields:
      GenreId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  Genre_set_input:
    description: "input type for updating data in table \"Genre\""
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Genre_stddev_fields:
    description: aggregate stddev on columns
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Genre_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Genre_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Genre_stream_cursor_input:
    description: "Streaming cursor of the table \"Genre\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: Genre_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  Genre_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Genre_sum_fields:
    description: aggregate sum on columns
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Genre_updates:
    fields:
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Genre_bool_exp
    foreign_keys: {}
  Genre_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Genre_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Genre_variance_fields:
    description: aggregate variance on columns
    fields:
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Int_comparison_exp:
    description: "Boolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'."
    fields:
      _eq:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      _gt:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      _gte:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      _in:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Int
      _is_null:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      _lt:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      _lte:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      _neq:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      _nin:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Int
    foreign_keys: {}
  Invoice:
    description: "columns and relationships of \"Invoice\""
    fields:
      BillingAddress:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCountry:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingPostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingState:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Customer:
        description: An object relationship
        type:
          type: named
          name: Customer
      CustomerId:
        type:
          type: named
          name: Int
      InvoiceDate:
        type:
          type: named
          name: timestamp
      InvoiceId:
        type:
          type: named
          name: Int
      InvoiceLines:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: InvoiceLine_bool_exp
      InvoiceLines_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: InvoiceLine_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: InvoiceLine_bool_exp
      Total:
        type:
          type: named
          name: numeric
    foreign_keys: {}
  InvoiceLine:
    description: "columns and relationships of \"InvoiceLine\""
    fields:
      Invoice:
        description: An object relationship
        type:
          type: named
          name: Invoice
      InvoiceId:
        type:
          type: named
          name: Int
      InvoiceLineId:
        type:
          type: named
          name: Int
      Quantity:
        type:
          type: named
          name: Int
      Track:
        description: An object relationship
        type:
          type: named
          name: Track
      TrackId:
        type:
          type: named
          name: Int
      UnitPrice:
        type:
          type: named
          name: numeric
    foreign_keys: {}
  InvoiceLine_aggregate:
    description: "aggregated selection of \"InvoiceLine\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine
    foreign_keys: {}
  InvoiceLine_aggregate_bool_exp:
    fields:
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_aggregate_bool_exp_count
    foreign_keys: {}
  InvoiceLine_aggregate_bool_exp_count:
    fields:
      arguments:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: InvoiceLine_select_column
      distinct:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      filter:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_bool_exp
      predicate:
        type:
          type: named
          name: Int_comparison_exp
    foreign_keys: {}
  InvoiceLine_aggregate_fields:
    description: "aggregate fields of \"InvoiceLine\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_variance_fields
    foreign_keys: {}
  InvoiceLine_aggregate_order_by:
    description: "order by aggregate values of table \"InvoiceLine\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_avg_order_by
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_max_order_by
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_min_order_by
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_stddev_order_by
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_stddev_pop_order_by
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_stddev_samp_order_by
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_sum_order_by
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_var_pop_order_by
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_var_samp_order_by
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_variance_order_by
    foreign_keys: {}
  InvoiceLine_arr_rel_insert_input:
    description: "input type for inserting array relation for remote table \"InvoiceLine\""
    fields:
      data:
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_on_conflict
    foreign_keys: {}
  InvoiceLine_avg_fields:
    description: aggregate avg on columns
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  InvoiceLine_avg_order_by:
    description: "order by avg() on columns of table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  InvoiceLine_bool_exp:
    description: "Boolean expression to filter rows from the table \"InvoiceLine\". All fields are combined with a logical 'AND'."
    fields:
      Invoice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_bool_exp
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Track:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_bool_exp
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric_comparison_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: InvoiceLine_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: InvoiceLine_bool_exp
    foreign_keys: {}
  InvoiceLine_inc_input:
    description: "input type for incrementing numeric columns in table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  InvoiceLine_insert_input:
    description: "input type for inserting data into table \"InvoiceLine\""
    fields:
      Invoice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_obj_rel_insert_input
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Track:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_obj_rel_insert_input
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  InvoiceLine_max_fields:
    description: aggregate max on columns
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  InvoiceLine_max_order_by:
    description: "order by max() on columns of table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  InvoiceLine_min_fields:
    description: aggregate min on columns
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  InvoiceLine_min_order_by:
    description: "order by min() on columns of table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  InvoiceLine_mutation_response:
    description: "response of any mutation on the table \"InvoiceLine\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine
    foreign_keys: {}
  InvoiceLine_on_conflict:
    description: "on_conflict condition type for table \"InvoiceLine\""
    fields:
      constraint:
        type:
          type: named
          name: InvoiceLine_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_bool_exp
    foreign_keys: {}
  InvoiceLine_order_by:
    description: "Ordering options when selecting data from \"InvoiceLine\"."
    fields:
      Invoice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Track:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  InvoiceLine_pk_columns_input:
    description: "primary key columns input for table: InvoiceLine"
    fields:
      InvoiceLineId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  InvoiceLine_set_input:
    description: "input type for updating data in table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  InvoiceLine_stddev_fields:
    description: aggregate stddev on columns
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  InvoiceLine_stddev_order_by:
    description: "order by stddev() on columns of table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  InvoiceLine_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  InvoiceLine_stddev_pop_order_by:
    description: "order by stddev_pop() on columns of table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  InvoiceLine_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  InvoiceLine_stddev_samp_order_by:
    description: "order by stddev_samp() on columns of table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  InvoiceLine_stream_cursor_input:
    description: "Streaming cursor of the table \"InvoiceLine\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: InvoiceLine_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  InvoiceLine_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  InvoiceLine_sum_fields:
    description: aggregate sum on columns
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  InvoiceLine_sum_order_by:
    description: "order by sum() on columns of table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  InvoiceLine_updates:
    fields:
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: InvoiceLine_bool_exp
    foreign_keys: {}
  InvoiceLine_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  InvoiceLine_var_pop_order_by:
    description: "order by var_pop() on columns of table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  InvoiceLine_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  InvoiceLine_var_samp_order_by:
    description: "order by var_samp() on columns of table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  InvoiceLine_variance_fields:
    description: aggregate variance on columns
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  InvoiceLine_variance_order_by:
    description: "order by variance() on columns of table \"InvoiceLine\""
    fields:
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLineId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Quantity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_aggregate:
    description: "aggregated selection of \"Invoice\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: Invoice
    foreign_keys: {}
  Invoice_aggregate_bool_exp:
    fields:
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_aggregate_bool_exp_count
    foreign_keys: {}
  Invoice_aggregate_bool_exp_count:
    fields:
      arguments:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Invoice_select_column
      distinct:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      filter:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_bool_exp
      predicate:
        type:
          type: named
          name: Int_comparison_exp
    foreign_keys: {}
  Invoice_aggregate_fields:
    description: "aggregate fields of \"Invoice\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Invoice_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_variance_fields
    foreign_keys: {}
  Invoice_aggregate_order_by:
    description: "order by aggregate values of table \"Invoice\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_avg_order_by
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_max_order_by
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_min_order_by
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_stddev_order_by
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_stddev_pop_order_by
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_stddev_samp_order_by
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_sum_order_by
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_var_pop_order_by
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_var_samp_order_by
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_variance_order_by
    foreign_keys: {}
  Invoice_arr_rel_insert_input:
    description: "input type for inserting array relation for remote table \"Invoice\""
    fields:
      data:
        type:
          type: array
          element_type:
            type: named
            name: Invoice_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_on_conflict
    foreign_keys: {}
  Invoice_avg_fields:
    description: aggregate avg on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Invoice_avg_order_by:
    description: "order by avg() on columns of table \"Invoice\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_bool_exp:
    description: "Boolean expression to filter rows from the table \"Invoice\". All fields are combined with a logical 'AND'."
    fields:
      BillingAddress:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      BillingCity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      BillingCountry:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      BillingPostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      BillingState:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Customer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_bool_exp
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      InvoiceDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp_comparison_exp
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      InvoiceLines:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_bool_exp
      InvoiceLines_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_aggregate_bool_exp
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric_comparison_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Invoice_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Invoice_bool_exp
    foreign_keys: {}
  Invoice_inc_input:
    description: "input type for incrementing numeric columns in table \"Invoice\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Invoice_insert_input:
    description: "input type for inserting data into table \"Invoice\""
    fields:
      BillingAddress:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCountry:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingPostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingState:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Customer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_obj_rel_insert_input
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      InvoiceLines:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_arr_rel_insert_input
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Invoice_max_fields:
    description: aggregate max on columns
    fields:
      BillingAddress:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCountry:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingPostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingState:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Invoice_max_order_by:
    description: "order by max() on columns of table \"Invoice\""
    fields:
      BillingAddress:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingCity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingCountry:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingPostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingState:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_min_fields:
    description: aggregate min on columns
    fields:
      BillingAddress:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCountry:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingPostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingState:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Invoice_min_order_by:
    description: "order by min() on columns of table \"Invoice\""
    fields:
      BillingAddress:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingCity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingCountry:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingPostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingState:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_mutation_response:
    description: "response of any mutation on the table \"Invoice\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: Invoice
    foreign_keys: {}
  Invoice_obj_rel_insert_input:
    description: "input type for inserting object relation for remote table \"Invoice\""
    fields:
      data:
        type:
          type: named
          name: Invoice_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_on_conflict
    foreign_keys: {}
  Invoice_on_conflict:
    description: "on_conflict condition type for table \"Invoice\""
    fields:
      constraint:
        type:
          type: named
          name: Invoice_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: Invoice_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_bool_exp
    foreign_keys: {}
  Invoice_order_by:
    description: "Ordering options when selecting data from \"Invoice\"."
    fields:
      BillingAddress:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingCity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingCountry:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingPostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      BillingState:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Customer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_order_by
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLines_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_aggregate_order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_pk_columns_input:
    description: "primary key columns input for table: Invoice"
    fields:
      InvoiceId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  Invoice_set_input:
    description: "input type for updating data in table \"Invoice\""
    fields:
      BillingAddress:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCountry:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingPostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingState:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Invoice_stddev_fields:
    description: aggregate stddev on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Invoice_stddev_order_by:
    description: "order by stddev() on columns of table \"Invoice\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Invoice_stddev_pop_order_by:
    description: "order by stddev_pop() on columns of table \"Invoice\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Invoice_stddev_samp_order_by:
    description: "order by stddev_samp() on columns of table \"Invoice\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_stream_cursor_input:
    description: "Streaming cursor of the table \"Invoice\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: Invoice_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  Invoice_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      BillingAddress:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCity:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingCountry:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingPostalCode:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      BillingState:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceDate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Invoice_sum_fields:
    description: aggregate sum on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Invoice_sum_order_by:
    description: "order by sum() on columns of table \"Invoice\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_updates:
    fields:
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Invoice_bool_exp
    foreign_keys: {}
  Invoice_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Invoice_var_pop_order_by:
    description: "order by var_pop() on columns of table \"Invoice\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Invoice_var_samp_order_by:
    description: "order by var_samp() on columns of table \"Invoice\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Invoice_variance_fields:
    description: aggregate variance on columns
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Invoice_variance_order_by:
    description: "order by variance() on columns of table \"Invoice\""
    fields:
      CustomerId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Total:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  MediaType:
    description: "columns and relationships of \"MediaType\""
    fields:
      MediaTypeId:
        type:
          type: named
          name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Tracks:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: Track
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Track_bool_exp
      Tracks_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: Track_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Track_bool_exp
    foreign_keys: {}
  MediaType_aggregate:
    description: "aggregated selection of \"MediaType\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: MediaType
    foreign_keys: {}
  MediaType_aggregate_fields:
    description: "aggregate fields of \"MediaType\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: MediaType_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_variance_fields
    foreign_keys: {}
  MediaType_avg_fields:
    description: aggregate avg on columns
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  MediaType_bool_exp:
    description: "Boolean expression to filter rows from the table \"MediaType\". All fields are combined with a logical 'AND'."
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Tracks:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_bool_exp
      Tracks_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_aggregate_bool_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: MediaType_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: MediaType_bool_exp
    foreign_keys: {}
  MediaType_insert_input:
    description: "input type for inserting data into table \"MediaType\""
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Tracks:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_arr_rel_insert_input
    foreign_keys: {}
  MediaType_max_fields:
    description: aggregate max on columns
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  MediaType_min_fields:
    description: aggregate min on columns
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  MediaType_mutation_response:
    description: "response of any mutation on the table \"MediaType\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: MediaType
    foreign_keys: {}
  MediaType_obj_rel_insert_input:
    description: "input type for inserting object relation for remote table \"MediaType\""
    fields:
      data:
        type:
          type: named
          name: MediaType_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_on_conflict
    foreign_keys: {}
  MediaType_on_conflict:
    description: "on_conflict condition type for table \"MediaType\""
    fields:
      constraint:
        type:
          type: named
          name: MediaType_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: MediaType_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_bool_exp
    foreign_keys: {}
  MediaType_order_by:
    description: "Ordering options when selecting data from \"MediaType\"."
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Tracks_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_aggregate_order_by
    foreign_keys: {}
  MediaType_pk_columns_input:
    description: "primary key columns input for table: MediaType"
    fields:
      MediaTypeId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  MediaType_set_input:
    description: "input type for updating data in table \"MediaType\""
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  MediaType_stddev_fields:
    description: aggregate stddev on columns
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  MediaType_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  MediaType_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  MediaType_stream_cursor_input:
    description: "Streaming cursor of the table \"MediaType\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: MediaType_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  MediaType_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  MediaType_sum_fields:
    description: aggregate sum on columns
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  MediaType_updates:
    fields:
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: MediaType_bool_exp
    foreign_keys: {}
  MediaType_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  MediaType_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  MediaType_variance_fields:
    description: aggregate variance on columns
    fields:
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Playlist:
    description: "columns and relationships of \"Playlist\""
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PlaylistId:
        type:
          type: named
          name: Int
      PlaylistTracks:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: PlaylistTrack_bool_exp
      PlaylistTracks_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: PlaylistTrack_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: PlaylistTrack_bool_exp
    foreign_keys: {}
  PlaylistTrack:
    description: "columns and relationships of \"PlaylistTrack\""
    fields:
      Playlist:
        description: An object relationship
        type:
          type: named
          name: Playlist
      PlaylistId:
        type:
          type: named
          name: Int
      Track:
        description: An object relationship
        type:
          type: named
          name: Track
      TrackId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  PlaylistTrack_aggregate:
    description: "aggregated selection of \"PlaylistTrack\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack
    foreign_keys: {}
  PlaylistTrack_aggregate_bool_exp:
    fields:
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_aggregate_bool_exp_count
    foreign_keys: {}
  PlaylistTrack_aggregate_bool_exp_count:
    fields:
      arguments:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: PlaylistTrack_select_column
      distinct:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      filter:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_bool_exp
      predicate:
        type:
          type: named
          name: Int_comparison_exp
    foreign_keys: {}
  PlaylistTrack_aggregate_fields:
    description: "aggregate fields of \"PlaylistTrack\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_variance_fields
    foreign_keys: {}
  PlaylistTrack_aggregate_order_by:
    description: "order by aggregate values of table \"PlaylistTrack\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_avg_order_by
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_max_order_by
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_min_order_by
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_stddev_order_by
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_stddev_pop_order_by
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_stddev_samp_order_by
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_sum_order_by
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_var_pop_order_by
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_var_samp_order_by
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_variance_order_by
    foreign_keys: {}
  PlaylistTrack_arr_rel_insert_input:
    description: "input type for inserting array relation for remote table \"PlaylistTrack\""
    fields:
      data:
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_on_conflict
    foreign_keys: {}
  PlaylistTrack_avg_fields:
    description: aggregate avg on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  PlaylistTrack_avg_order_by:
    description: "order by avg() on columns of table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  PlaylistTrack_bool_exp:
    description: "Boolean expression to filter rows from the table \"PlaylistTrack\". All fields are combined with a logical 'AND'."
    fields:
      Playlist:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_bool_exp
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Track:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_bool_exp
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: PlaylistTrack_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: PlaylistTrack_bool_exp
    foreign_keys: {}
  PlaylistTrack_inc_input:
    description: "input type for incrementing numeric columns in table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  PlaylistTrack_insert_input:
    description: "input type for inserting data into table \"PlaylistTrack\""
    fields:
      Playlist:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_obj_rel_insert_input
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Track:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_obj_rel_insert_input
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  PlaylistTrack_max_fields:
    description: aggregate max on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  PlaylistTrack_max_order_by:
    description: "order by max() on columns of table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  PlaylistTrack_min_fields:
    description: aggregate min on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  PlaylistTrack_min_order_by:
    description: "order by min() on columns of table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  PlaylistTrack_mutation_response:
    description: "response of any mutation on the table \"PlaylistTrack\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack
    foreign_keys: {}
  PlaylistTrack_on_conflict:
    description: "on_conflict condition type for table \"PlaylistTrack\""
    fields:
      constraint:
        type:
          type: named
          name: PlaylistTrack_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_bool_exp
    foreign_keys: {}
  PlaylistTrack_order_by:
    description: "Ordering options when selecting data from \"PlaylistTrack\"."
    fields:
      Playlist:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_order_by
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Track:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  PlaylistTrack_pk_columns_input:
    description: "primary key columns input for table: PlaylistTrack"
    fields:
      PlaylistId:
        type:
          type: named
          name: Int
      TrackId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  PlaylistTrack_set_input:
    description: "input type for updating data in table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  PlaylistTrack_stddev_fields:
    description: aggregate stddev on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  PlaylistTrack_stddev_order_by:
    description: "order by stddev() on columns of table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  PlaylistTrack_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  PlaylistTrack_stddev_pop_order_by:
    description: "order by stddev_pop() on columns of table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  PlaylistTrack_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  PlaylistTrack_stddev_samp_order_by:
    description: "order by stddev_samp() on columns of table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  PlaylistTrack_stream_cursor_input:
    description: "Streaming cursor of the table \"PlaylistTrack\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: PlaylistTrack_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  PlaylistTrack_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  PlaylistTrack_sum_fields:
    description: aggregate sum on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  PlaylistTrack_sum_order_by:
    description: "order by sum() on columns of table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  PlaylistTrack_updates:
    fields:
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: PlaylistTrack_bool_exp
    foreign_keys: {}
  PlaylistTrack_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  PlaylistTrack_var_pop_order_by:
    description: "order by var_pop() on columns of table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  PlaylistTrack_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  PlaylistTrack_var_samp_order_by:
    description: "order by var_samp() on columns of table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  PlaylistTrack_variance_fields:
    description: aggregate variance on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  PlaylistTrack_variance_order_by:
    description: "order by variance() on columns of table \"PlaylistTrack\""
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Playlist_aggregate:
    description: "aggregated selection of \"Playlist\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: Playlist
    foreign_keys: {}
  Playlist_aggregate_fields:
    description: "aggregate fields of \"Playlist\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Playlist_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_variance_fields
    foreign_keys: {}
  Playlist_avg_fields:
    description: aggregate avg on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Playlist_bool_exp:
    description: "Boolean expression to filter rows from the table \"Playlist\". All fields are combined with a logical 'AND'."
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      PlaylistTracks:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_bool_exp
      PlaylistTracks_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_aggregate_bool_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Playlist_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Playlist_bool_exp
    foreign_keys: {}
  Playlist_insert_input:
    description: "input type for inserting data into table \"Playlist\""
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PlaylistTracks:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_arr_rel_insert_input
    foreign_keys: {}
  Playlist_max_fields:
    description: aggregate max on columns
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Playlist_min_fields:
    description: aggregate min on columns
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Playlist_mutation_response:
    description: "response of any mutation on the table \"Playlist\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: Playlist
    foreign_keys: {}
  Playlist_obj_rel_insert_input:
    description: "input type for inserting object relation for remote table \"Playlist\""
    fields:
      data:
        type:
          type: named
          name: Playlist_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_on_conflict
    foreign_keys: {}
  Playlist_on_conflict:
    description: "on_conflict condition type for table \"Playlist\""
    fields:
      constraint:
        type:
          type: named
          name: Playlist_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: Playlist_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_bool_exp
    foreign_keys: {}
  Playlist_order_by:
    description: "Ordering options when selecting data from \"Playlist\"."
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      PlaylistTracks_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_aggregate_order_by
    foreign_keys: {}
  Playlist_pk_columns_input:
    description: "primary key columns input for table: Playlist"
    fields:
      PlaylistId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  Playlist_set_input:
    description: "input type for updating data in table \"Playlist\""
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Playlist_stddev_fields:
    description: aggregate stddev on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Playlist_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Playlist_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Playlist_stream_cursor_input:
    description: "Streaming cursor of the table \"Playlist\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: Playlist_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  Playlist_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Playlist_sum_fields:
    description: aggregate sum on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
    foreign_keys: {}
  Playlist_updates:
    fields:
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Playlist_bool_exp
    foreign_keys: {}
  Playlist_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Playlist_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Playlist_variance_fields:
    description: aggregate variance on columns
    fields:
      PlaylistId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  String_comparison_exp:
    description: "Boolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'."
    fields:
      _eq:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _gt:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _gte:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _ilike:
        description: does the column match the given case-insensitive pattern
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _in:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: String
      _iregex:
        description: "does the column match the given POSIX regular expression, case insensitive"
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _is_null:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      _like:
        description: does the column match the given pattern
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _lt:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _lte:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _neq:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _nilike:
        description: does the column NOT match the given case-insensitive pattern
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _nin:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: String
      _niregex:
        description: "does the column NOT match the given POSIX regular expression, case insensitive"
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _nlike:
        description: does the column NOT match the given pattern
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _nregex:
        description: "does the column NOT match the given POSIX regular expression, case sensitive"
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _nsimilar:
        description: does the column NOT match the given SQL regular expression
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _regex:
        description: "does the column match the given POSIX regular expression, case sensitive"
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      _similar:
        description: does the column match the given SQL regular expression
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
    foreign_keys: {}
  Track:
    description: "columns and relationships of \"Track\""
    fields:
      Album:
        description: An object relationship
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Composer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Genre:
        description: An object relationship
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceLines:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: InvoiceLine_bool_exp
      InvoiceLines_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: InvoiceLine_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: InvoiceLine_bool_exp
      MediaType:
        description: An object relationship
        type:
          type: named
          name: MediaType
      MediaTypeId:
        type:
          type: named
          name: Int
      Milliseconds:
        type:
          type: named
          name: Int
      Name:
        type:
          type: named
          name: String
      PlaylistTracks:
        description: An array relationship
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: PlaylistTrack_bool_exp
      PlaylistTracks_aggregate:
        description: An aggregate relationship
        type:
          type: named
          name: PlaylistTrack_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: PlaylistTrack_bool_exp
      TrackId:
        type:
          type: named
          name: Int
      UnitPrice:
        type:
          type: named
          name: numeric
    foreign_keys: {}
  Track_aggregate:
    description: "aggregated selection of \"Track\""
    fields:
      aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_aggregate_fields
      nodes:
        type:
          type: array
          element_type:
            type: named
            name: Track
    foreign_keys: {}
  Track_aggregate_bool_exp:
    fields:
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_aggregate_bool_exp_count
    foreign_keys: {}
  Track_aggregate_bool_exp_count:
    fields:
      arguments:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Track_select_column
      distinct:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      filter:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_bool_exp
      predicate:
        type:
          type: named
          name: Int_comparison_exp
    foreign_keys: {}
  Track_aggregate_fields:
    description: "aggregate fields of \"Track\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_avg_fields
      count:
        type:
          type: named
          name: Int
        arguments:
          columns:
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_select_column
          distinct:
            type:
              type: nullable
              underlying_type:
                type: named
                name: Boolean
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_max_fields
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_min_fields
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_stddev_fields
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_stddev_pop_fields
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_stddev_samp_fields
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_sum_fields
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_var_pop_fields
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_var_samp_fields
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_variance_fields
    foreign_keys: {}
  Track_aggregate_order_by:
    description: "order by aggregate values of table \"Track\""
    fields:
      avg:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_avg_order_by
      count:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      max:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_max_order_by
      min:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_min_order_by
      stddev:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_stddev_order_by
      stddev_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_stddev_pop_order_by
      stddev_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_stddev_samp_order_by
      sum:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_sum_order_by
      var_pop:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_var_pop_order_by
      var_samp:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_var_samp_order_by
      variance:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_variance_order_by
    foreign_keys: {}
  Track_arr_rel_insert_input:
    description: "input type for inserting array relation for remote table \"Track\""
    fields:
      data:
        type:
          type: array
          element_type:
            type: named
            name: Track_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_on_conflict
    foreign_keys: {}
  Track_avg_fields:
    description: aggregate avg on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Track_avg_order_by:
    description: "order by avg() on columns of table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Track_bool_exp:
    description: "Boolean expression to filter rows from the table \"Track\". All fields are combined with a logical 'AND'."
    fields:
      Album:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_bool_exp
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Composer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      Genre:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_bool_exp
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      InvoiceLines:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_bool_exp
      InvoiceLines_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_aggregate_bool_exp
      MediaType:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_bool_exp
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String_comparison_exp
      PlaylistTracks:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_bool_exp
      PlaylistTracks_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_aggregate_bool_exp
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int_comparison_exp
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric_comparison_exp
      _and:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Track_bool_exp
      _not:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_bool_exp
      _or:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Track_bool_exp
    foreign_keys: {}
  Track_inc_input:
    description: "input type for incrementing numeric columns in table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Track_insert_input:
    description: "input type for inserting data into table \"Track\""
    fields:
      Album:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_obj_rel_insert_input
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Composer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      Genre:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_obj_rel_insert_input
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      InvoiceLines:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_arr_rel_insert_input
      MediaType:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_obj_rel_insert_input
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      PlaylistTracks:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_arr_rel_insert_input
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Track_max_fields:
    description: aggregate max on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Composer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Track_max_order_by:
    description: "order by max() on columns of table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Composer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Track_min_fields:
    description: aggregate min on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Composer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Track_min_order_by:
    description: "order by min() on columns of table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Composer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Track_mutation_response:
    description: "response of any mutation on the table \"Track\""
    fields:
      affected_rows:
        description: number of rows affected by the mutation
        type:
          type: named
          name: Int
      returning:
        description: data from the rows affected by the mutation
        type:
          type: array
          element_type:
            type: named
            name: Track
    foreign_keys: {}
  Track_obj_rel_insert_input:
    description: "input type for inserting object relation for remote table \"Track\""
    fields:
      data:
        type:
          type: named
          name: Track_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_on_conflict
    foreign_keys: {}
  Track_on_conflict:
    description: "on_conflict condition type for table \"Track\""
    fields:
      constraint:
        type:
          type: named
          name: Track_constraint
      update_columns:
        type:
          type: array
          element_type:
            type: named
            name: Track_update_column
      where:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_bool_exp
    foreign_keys: {}
  Track_order_by:
    description: "Ordering options when selecting data from \"Track\"."
    fields:
      Album:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_order_by
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Composer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Genre:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      InvoiceLines_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_aggregate_order_by
      MediaType:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      PlaylistTracks_aggregate:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_aggregate_order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Track_pk_columns_input:
    description: "primary key columns input for table: Track"
    fields:
      TrackId:
        type:
          type: named
          name: Int
    foreign_keys: {}
  Track_set_input:
    description: "input type for updating data in table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Composer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Track_stddev_fields:
    description: aggregate stddev on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Track_stddev_order_by:
    description: "order by stddev() on columns of table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Track_stddev_pop_fields:
    description: aggregate stddev_pop on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Track_stddev_pop_order_by:
    description: "order by stddev_pop() on columns of table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Track_stddev_samp_fields:
    description: aggregate stddev_samp on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Track_stddev_samp_order_by:
    description: "order by stddev_samp() on columns of table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Track_stream_cursor_input:
    description: "Streaming cursor of the table \"Track\""
    fields:
      initial_value:
        description: Stream column input with initial value
        type:
          type: named
          name: Track_stream_cursor_value_input
      ordering:
        description: cursor ordering
        type:
          type: nullable
          underlying_type:
            type: named
            name: cursor_ordering
    foreign_keys: {}
  Track_stream_cursor_value_input:
    description: Initial value of the column from where the streaming should start
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Composer:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Name:
        type:
          type: nullable
          underlying_type:
            type: named
            name: String
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Track_sum_fields:
    description: aggregate sum on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
    foreign_keys: {}
  Track_sum_order_by:
    description: "order by sum() on columns of table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Track_updates:
    fields:
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Track_bool_exp
    foreign_keys: {}
  Track_var_pop_fields:
    description: aggregate var_pop on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Track_var_pop_order_by:
    description: "order by var_pop() on columns of table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Track_var_samp_fields:
    description: aggregate var_samp on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Track_var_samp_order_by:
    description: "order by var_samp() on columns of table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  Track_variance_fields:
    description: aggregate variance on columns
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Float
    foreign_keys: {}
  Track_variance_order_by:
    description: "order by variance() on columns of table \"Track\""
    fields:
      AlbumId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Bytes:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      GenreId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      MediaTypeId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      Milliseconds:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      TrackId:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
      UnitPrice:
        type:
          type: nullable
          underlying_type:
            type: named
            name: order_by
    foreign_keys: {}
  _AlbumQueryResponse:
    description: Response type for function Album
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: Album
    foreign_keys: {}
  _Album_aggregateQueryResponse:
    description: Response type for function Album_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: Album_aggregate
    foreign_keys: {}
  _Album_by_pkQueryResponse:
    description: Response type for function Album_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album
    foreign_keys: {}
  _ArtistQueryResponse:
    description: Response type for function Artist
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: Artist
    foreign_keys: {}
  _Artist_aggregateQueryResponse:
    description: Response type for function Artist_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: Artist_aggregate
    foreign_keys: {}
  _Artist_by_pkQueryResponse:
    description: Response type for function Artist_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist
    foreign_keys: {}
  _CustomerQueryResponse:
    description: Response type for function Customer
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: Customer
    foreign_keys: {}
  _Customer_aggregateQueryResponse:
    description: Response type for function Customer_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: Customer_aggregate
    foreign_keys: {}
  _Customer_by_pkQueryResponse:
    description: Response type for function Customer_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer
    foreign_keys: {}
  _EmployeeQueryResponse:
    description: Response type for function Employee
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: Employee
    foreign_keys: {}
  _Employee_aggregateQueryResponse:
    description: Response type for function Employee_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: Employee_aggregate
    foreign_keys: {}
  _Employee_by_pkQueryResponse:
    description: Response type for function Employee_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee
    foreign_keys: {}
  _GenreQueryResponse:
    description: Response type for function Genre
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: Genre
    foreign_keys: {}
  _Genre_aggregateQueryResponse:
    description: Response type for function Genre_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: Genre_aggregate
    foreign_keys: {}
  _Genre_by_pkQueryResponse:
    description: Response type for function Genre_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre
    foreign_keys: {}
  _InvoiceLineQueryResponse:
    description: Response type for function InvoiceLine
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine
    foreign_keys: {}
  _InvoiceLine_aggregateQueryResponse:
    description: Response type for function InvoiceLine_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: InvoiceLine_aggregate
    foreign_keys: {}
  _InvoiceLine_by_pkQueryResponse:
    description: Response type for function InvoiceLine_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine
    foreign_keys: {}
  _InvoiceQueryResponse:
    description: Response type for function Invoice
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: Invoice
    foreign_keys: {}
  _Invoice_aggregateQueryResponse:
    description: Response type for function Invoice_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: Invoice_aggregate
    foreign_keys: {}
  _Invoice_by_pkQueryResponse:
    description: Response type for function Invoice_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice
    foreign_keys: {}
  _MediaTypeQueryResponse:
    description: Response type for function MediaType
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: MediaType
    foreign_keys: {}
  _MediaType_aggregateQueryResponse:
    description: Response type for function MediaType_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: MediaType_aggregate
    foreign_keys: {}
  _MediaType_by_pkQueryResponse:
    description: Response type for function MediaType_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType
    foreign_keys: {}
  _PlaylistQueryResponse:
    description: Response type for function Playlist
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: Playlist
    foreign_keys: {}
  _PlaylistTrackQueryResponse:
    description: Response type for function PlaylistTrack
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack
    foreign_keys: {}
  _PlaylistTrack_aggregateQueryResponse:
    description: Response type for function PlaylistTrack_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: PlaylistTrack_aggregate
    foreign_keys: {}
  _PlaylistTrack_by_pkQueryResponse:
    description: Response type for function PlaylistTrack_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack
    foreign_keys: {}
  _Playlist_aggregateQueryResponse:
    description: Response type for function Playlist_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: Playlist_aggregate
    foreign_keys: {}
  _Playlist_by_pkQueryResponse:
    description: Response type for function Playlist_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist
    foreign_keys: {}
  _TrackQueryResponse:
    description: Response type for function Track
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: array
          element_type:
            type: named
            name: Track
    foreign_keys: {}
  _Track_aggregateQueryResponse:
    description: Response type for function Track_aggregate
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: named
          name: Track_aggregate
    foreign_keys: {}
  _Track_by_pkQueryResponse:
    description: Response type for function Track_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track
    foreign_keys: {}
  _delete_AlbumMutationResponse:
    description: Response type for procedure delete_Album
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_mutation_response
    foreign_keys: {}
  _delete_Album_by_pkMutationResponse:
    description: Response type for procedure delete_Album_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album
    foreign_keys: {}
  _delete_ArtistMutationResponse:
    description: Response type for procedure delete_Artist
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_mutation_response
    foreign_keys: {}
  _delete_Artist_by_pkMutationResponse:
    description: Response type for procedure delete_Artist_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist
    foreign_keys: {}
  _delete_CustomerMutationResponse:
    description: Response type for procedure delete_Customer
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_mutation_response
    foreign_keys: {}
  _delete_Customer_by_pkMutationResponse:
    description: Response type for procedure delete_Customer_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer
    foreign_keys: {}
  _delete_EmployeeMutationResponse:
    description: Response type for procedure delete_Employee
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_mutation_response
    foreign_keys: {}
  _delete_Employee_by_pkMutationResponse:
    description: Response type for procedure delete_Employee_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee
    foreign_keys: {}
  _delete_GenreMutationResponse:
    description: Response type for procedure delete_Genre
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_mutation_response
    foreign_keys: {}
  _delete_Genre_by_pkMutationResponse:
    description: Response type for procedure delete_Genre_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre
    foreign_keys: {}
  _delete_InvoiceLineMutationResponse:
    description: Response type for procedure delete_InvoiceLine
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_mutation_response
    foreign_keys: {}
  _delete_InvoiceLine_by_pkMutationResponse:
    description: Response type for procedure delete_InvoiceLine_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine
    foreign_keys: {}
  _delete_InvoiceMutationResponse:
    description: Response type for procedure delete_Invoice
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_mutation_response
    foreign_keys: {}
  _delete_Invoice_by_pkMutationResponse:
    description: Response type for procedure delete_Invoice_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice
    foreign_keys: {}
  _delete_MediaTypeMutationResponse:
    description: Response type for procedure delete_MediaType
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_mutation_response
    foreign_keys: {}
  _delete_MediaType_by_pkMutationResponse:
    description: Response type for procedure delete_MediaType_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType
    foreign_keys: {}
  _delete_PlaylistMutationResponse:
    description: Response type for procedure delete_Playlist
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_mutation_response
    foreign_keys: {}
  _delete_PlaylistTrackMutationResponse:
    description: Response type for procedure delete_PlaylistTrack
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_mutation_response
    foreign_keys: {}
  _delete_PlaylistTrack_by_pkMutationResponse:
    description: Response type for procedure delete_PlaylistTrack_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack
    foreign_keys: {}
  _delete_Playlist_by_pkMutationResponse:
    description: Response type for procedure delete_Playlist_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist
    foreign_keys: {}
  _delete_TrackMutationResponse:
    description: Response type for procedure delete_Track
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_mutation_response
    foreign_keys: {}
  _delete_Track_by_pkMutationResponse:
    description: Response type for procedure delete_Track_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track
    foreign_keys: {}
  _insert_AlbumMutationResponse:
    description: Response type for procedure insert_Album
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_mutation_response
    foreign_keys: {}
  _insert_Album_oneMutationResponse:
    description: Response type for procedure insert_Album_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album
    foreign_keys: {}
  _insert_ArtistMutationResponse:
    description: Response type for procedure insert_Artist
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_mutation_response
    foreign_keys: {}
  _insert_Artist_oneMutationResponse:
    description: Response type for procedure insert_Artist_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist
    foreign_keys: {}
  _insert_CustomerMutationResponse:
    description: Response type for procedure insert_Customer
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_mutation_response
    foreign_keys: {}
  _insert_Customer_oneMutationResponse:
    description: Response type for procedure insert_Customer_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer
    foreign_keys: {}
  _insert_EmployeeMutationResponse:
    description: Response type for procedure insert_Employee
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_mutation_response
    foreign_keys: {}
  _insert_Employee_oneMutationResponse:
    description: Response type for procedure insert_Employee_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee
    foreign_keys: {}
  _insert_GenreMutationResponse:
    description: Response type for procedure insert_Genre
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_mutation_response
    foreign_keys: {}
  _insert_Genre_oneMutationResponse:
    description: Response type for procedure insert_Genre_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre
    foreign_keys: {}
  _insert_InvoiceLineMutationResponse:
    description: Response type for procedure insert_InvoiceLine
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_mutation_response
    foreign_keys: {}
  _insert_InvoiceLine_oneMutationResponse:
    description: Response type for procedure insert_InvoiceLine_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine
    foreign_keys: {}
  _insert_InvoiceMutationResponse:
    description: Response type for procedure insert_Invoice
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_mutation_response
    foreign_keys: {}
  _insert_Invoice_oneMutationResponse:
    description: Response type for procedure insert_Invoice_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice
    foreign_keys: {}
  _insert_MediaTypeMutationResponse:
    description: Response type for procedure insert_MediaType
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_mutation_response
    foreign_keys: {}
  _insert_MediaType_oneMutationResponse:
    description: Response type for procedure insert_MediaType_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType
    foreign_keys: {}
  _insert_PlaylistMutationResponse:
    description: Response type for procedure insert_Playlist
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_mutation_response
    foreign_keys: {}
  _insert_PlaylistTrackMutationResponse:
    description: Response type for procedure insert_PlaylistTrack
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_mutation_response
    foreign_keys: {}
  _insert_PlaylistTrack_oneMutationResponse:
    description: Response type for procedure insert_PlaylistTrack_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack
    foreign_keys: {}
  _insert_Playlist_oneMutationResponse:
    description: Response type for procedure insert_Playlist_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist
    foreign_keys: {}
  _insert_TrackMutationResponse:
    description: Response type for procedure insert_Track
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_mutation_response
    foreign_keys: {}
  _insert_Track_oneMutationResponse:
    description: Response type for procedure insert_Track_one
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track
    foreign_keys: {}
  _update_AlbumMutationResponse:
    description: Response type for procedure update_Album
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_mutation_response
    foreign_keys: {}
  _update_Album_by_pkMutationResponse:
    description: Response type for procedure update_Album_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album
    foreign_keys: {}
  _update_Album_manyMutationResponse:
    description: Response type for procedure update_Album_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: Album_mutation_response
    foreign_keys: {}
  _update_ArtistMutationResponse:
    description: Response type for procedure update_Artist
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_mutation_response
    foreign_keys: {}
  _update_Artist_by_pkMutationResponse:
    description: Response type for procedure update_Artist_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist
    foreign_keys: {}
  _update_Artist_manyMutationResponse:
    description: Response type for procedure update_Artist_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: Artist_mutation_response
    foreign_keys: {}
  _update_CustomerMutationResponse:
    description: Response type for procedure update_Customer
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_mutation_response
    foreign_keys: {}
  _update_Customer_by_pkMutationResponse:
    description: Response type for procedure update_Customer_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer
    foreign_keys: {}
  _update_Customer_manyMutationResponse:
    description: Response type for procedure update_Customer_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: Customer_mutation_response
    foreign_keys: {}
  _update_EmployeeMutationResponse:
    description: Response type for procedure update_Employee
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_mutation_response
    foreign_keys: {}
  _update_Employee_by_pkMutationResponse:
    description: Response type for procedure update_Employee_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee
    foreign_keys: {}
  _update_Employee_manyMutationResponse:
    description: Response type for procedure update_Employee_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: Employee_mutation_response
    foreign_keys: {}
  _update_GenreMutationResponse:
    description: Response type for procedure update_Genre
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_mutation_response
    foreign_keys: {}
  _update_Genre_by_pkMutationResponse:
    description: Response type for procedure update_Genre_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre
    foreign_keys: {}
  _update_Genre_manyMutationResponse:
    description: Response type for procedure update_Genre_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: Genre_mutation_response
    foreign_keys: {}
  _update_InvoiceLineMutationResponse:
    description: Response type for procedure update_InvoiceLine
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_mutation_response
    foreign_keys: {}
  _update_InvoiceLine_by_pkMutationResponse:
    description: Response type for procedure update_InvoiceLine_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine
    foreign_keys: {}
  _update_InvoiceLine_manyMutationResponse:
    description: Response type for procedure update_InvoiceLine_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: InvoiceLine_mutation_response
    foreign_keys: {}
  _update_InvoiceMutationResponse:
    description: Response type for procedure update_Invoice
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_mutation_response
    foreign_keys: {}
  _update_Invoice_by_pkMutationResponse:
    description: Response type for procedure update_Invoice_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice
    foreign_keys: {}
  _update_Invoice_manyMutationResponse:
    description: Response type for procedure update_Invoice_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: Invoice_mutation_response
    foreign_keys: {}
  _update_MediaTypeMutationResponse:
    description: Response type for procedure update_MediaType
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_mutation_response
    foreign_keys: {}
  _update_MediaType_by_pkMutationResponse:
    description: Response type for procedure update_MediaType_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType
    foreign_keys: {}
  _update_MediaType_manyMutationResponse:
    description: Response type for procedure update_MediaType_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: MediaType_mutation_response
    foreign_keys: {}
  _update_PlaylistMutationResponse:
    description: Response type for procedure update_Playlist
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_mutation_response
    foreign_keys: {}
  _update_PlaylistTrackMutationResponse:
    description: Response type for procedure update_PlaylistTrack
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_mutation_response
    foreign_keys: {}
  _update_PlaylistTrack_by_pkMutationResponse:
    description: Response type for procedure update_PlaylistTrack_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack
    foreign_keys: {}
  _update_PlaylistTrack_manyMutationResponse:
    description: Response type for procedure update_PlaylistTrack_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: PlaylistTrack_mutation_response
    foreign_keys: {}
  _update_Playlist_by_pkMutationResponse:
    description: Response type for procedure update_Playlist_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist
    foreign_keys: {}
  _update_Playlist_manyMutationResponse:
    description: Response type for procedure update_Playlist_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: Playlist_mutation_response
    foreign_keys: {}
  _update_TrackMutationResponse:
    description: Response type for procedure update_Track
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_mutation_response
    foreign_keys: {}
  _update_Track_by_pkMutationResponse:
    description: Response type for procedure update_Track_by_pk
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track
    foreign_keys: {}
  _update_Track_manyMutationResponse:
    description: Response type for procedure update_Track_many
    fields:
      headers:
        type:
          type: named
          name: _HeaderMap
      response:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: nullable
              underlying_type:
                type: named
                name: Track_mutation_response
    foreign_keys: {}
  numeric_comparison_exp:
    description: "Boolean expression to compare columns of type \"numeric\". All fields are combined with logical 'AND'."
    fields:
      _eq:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
      _gt:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
      _gte:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
      _in:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: numeric
      _is_null:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      _lt:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
      _lte:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
      _neq:
        type:
          type: nullable
          underlying_type:
            type: named
            name: numeric
      _nin:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: numeric
    foreign_keys: {}
  subscription_root:
    fields:
      Album:
        description: "fetch data from the table: \"Album\""
        type:
          type: array
          element_type:
            type: named
            name: Album
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Album_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Album_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Album_bool_exp
      Album_aggregate:
        description: "fetch aggregated fields from the table: \"Album\""
        type:
          type: named
          name: Album_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Album_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Album_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Album_bool_exp
      Album_by_pk:
        description: "fetch data from the table: \"Album\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album
        arguments:
          AlbumId:
            type:
              type: named
              name: Int
      Album_stream:
        description: "fetch data from the table in a streaming manner: \"Album\""
        type:
          type: array
          element_type:
            type: named
            name: Album
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: Album_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Album_bool_exp
      Artist:
        description: "fetch data from the table: \"Artist\""
        type:
          type: array
          element_type:
            type: named
            name: Artist
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Artist_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Artist_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Artist_bool_exp
      Artist_aggregate:
        description: "fetch aggregated fields from the table: \"Artist\""
        type:
          type: named
          name: Artist_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Artist_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Artist_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Artist_bool_exp
      Artist_by_pk:
        description: "fetch data from the table: \"Artist\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist
        arguments:
          ArtistId:
            type:
              type: named
              name: Int
      Artist_stream:
        description: "fetch data from the table in a streaming manner: \"Artist\""
        type:
          type: array
          element_type:
            type: named
            name: Artist
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: Artist_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Artist_bool_exp
      Customer:
        description: "fetch data from the table: \"Customer\""
        type:
          type: array
          element_type:
            type: named
            name: Customer
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Customer_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Customer_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Customer_bool_exp
      Customer_aggregate:
        description: "fetch aggregated fields from the table: \"Customer\""
        type:
          type: named
          name: Customer_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Customer_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Customer_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Customer_bool_exp
      Customer_by_pk:
        description: "fetch data from the table: \"Customer\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer
        arguments:
          CustomerId:
            type:
              type: named
              name: Int
      Customer_stream:
        description: "fetch data from the table in a streaming manner: \"Customer\""
        type:
          type: array
          element_type:
            type: named
            name: Customer
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: Customer_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Customer_bool_exp
      Employee:
        description: "fetch data from the table: \"Employee\""
        type:
          type: array
          element_type:
            type: named
            name: Employee
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Employee_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Employee_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Employee_bool_exp
      Employee_aggregate:
        description: "fetch aggregated fields from the table: \"Employee\""
        type:
          type: named
          name: Employee_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Employee_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Employee_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Employee_bool_exp
      Employee_by_pk:
        description: "fetch data from the table: \"Employee\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee
        arguments:
          EmployeeId:
            type:
              type: named
              name: Int
      Employee_stream:
        description: "fetch data from the table in a streaming manner: \"Employee\""
        type:
          type: array
          element_type:
            type: named
            name: Employee
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: Employee_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Employee_bool_exp
      Genre:
        description: "fetch data from the table: \"Genre\""
        type:
          type: array
          element_type:
            type: named
            name: Genre
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Genre_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Genre_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Genre_bool_exp
      Genre_aggregate:
        description: "fetch aggregated fields from the table: \"Genre\""
        type:
          type: named
          name: Genre_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Genre_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Genre_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Genre_bool_exp
      Genre_by_pk:
        description: "fetch data from the table: \"Genre\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre
        arguments:
          GenreId:
            type:
              type: named
              name: Int
      Genre_stream:
        description: "fetch data from the table in a streaming manner: \"Genre\""
        type:
          type: array
          element_type:
            type: named
            name: Genre
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: Genre_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Genre_bool_exp
      Invoice:
        description: "fetch data from the table: \"Invoice\""
        type:
          type: array
          element_type:
            type: named
            name: Invoice
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Invoice_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Invoice_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Invoice_bool_exp
      InvoiceLine:
        description: "fetch data from the table: \"InvoiceLine\""
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: InvoiceLine_bool_exp
      InvoiceLine_aggregate:
        description: "fetch aggregated fields from the table: \"InvoiceLine\""
        type:
          type: named
          name: InvoiceLine_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: InvoiceLine_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: InvoiceLine_bool_exp
      InvoiceLine_by_pk:
        description: "fetch data from the table: \"InvoiceLine\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine
        arguments:
          InvoiceLineId:
            type:
              type: named
              name: Int
      InvoiceLine_stream:
        description: "fetch data from the table in a streaming manner: \"InvoiceLine\""
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: InvoiceLine_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: InvoiceLine_bool_exp
      Invoice_aggregate:
        description: "fetch aggregated fields from the table: \"Invoice\""
        type:
          type: named
          name: Invoice_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Invoice_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Invoice_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Invoice_bool_exp
      Invoice_by_pk:
        description: "fetch data from the table: \"Invoice\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice
        arguments:
          InvoiceId:
            type:
              type: named
              name: Int
      Invoice_stream:
        description: "fetch data from the table in a streaming manner: \"Invoice\""
        type:
          type: array
          element_type:
            type: named
            name: Invoice
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: Invoice_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Invoice_bool_exp
      MediaType:
        description: "fetch data from the table: \"MediaType\""
        type:
          type: array
          element_type:
            type: named
            name: MediaType
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: MediaType_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: MediaType_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: MediaType_bool_exp
      MediaType_aggregate:
        description: "fetch aggregated fields from the table: \"MediaType\""
        type:
          type: named
          name: MediaType_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: MediaType_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: MediaType_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: MediaType_bool_exp
      MediaType_by_pk:
        description: "fetch data from the table: \"MediaType\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType
        arguments:
          MediaTypeId:
            type:
              type: named
              name: Int
      MediaType_stream:
        description: "fetch data from the table in a streaming manner: \"MediaType\""
        type:
          type: array
          element_type:
            type: named
            name: MediaType
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: MediaType_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: MediaType_bool_exp
      Playlist:
        description: "fetch data from the table: \"Playlist\""
        type:
          type: array
          element_type:
            type: named
            name: Playlist
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Playlist_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Playlist_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Playlist_bool_exp
      PlaylistTrack:
        description: "fetch data from the table: \"PlaylistTrack\""
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: PlaylistTrack_bool_exp
      PlaylistTrack_aggregate:
        description: "fetch aggregated fields from the table: \"PlaylistTrack\""
        type:
          type: named
          name: PlaylistTrack_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: PlaylistTrack_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: PlaylistTrack_bool_exp
      PlaylistTrack_by_pk:
        description: "fetch data from the table: \"PlaylistTrack\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack
        arguments:
          PlaylistId:
            type:
              type: named
              name: Int
          TrackId:
            type:
              type: named
              name: Int
      PlaylistTrack_stream:
        description: "fetch data from the table in a streaming manner: \"PlaylistTrack\""
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: PlaylistTrack_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: PlaylistTrack_bool_exp
      Playlist_aggregate:
        description: "fetch aggregated fields from the table: \"Playlist\""
        type:
          type: named
          name: Playlist_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Playlist_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Playlist_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Playlist_bool_exp
      Playlist_by_pk:
        description: "fetch data from the table: \"Playlist\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist
        arguments:
          PlaylistId:
            type:
              type: named
              name: Int
      Playlist_stream:
        description: "fetch data from the table in a streaming manner: \"Playlist\""
        type:
          type: array
          element_type:
            type: named
            name: Playlist
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: Playlist_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Playlist_bool_exp
      Track:
        description: "fetch data from the table: \"Track\""
        type:
          type: array
          element_type:
            type: named
            name: Track
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Track_bool_exp
      Track_aggregate:
        description: "fetch aggregated fields from the table: \"Track\""
        type:
          type: named
          name: Track_aggregate
        arguments:
          distinct_on:
            description: distinct select on columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_select_column
          limit:
            description: limit the number of rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          offset:
            description: skip the first n rows. Use only with order_by
            type:
              type: nullable
              underlying_type:
                type: named
                name: Int
          order_by:
            description: sort the rows by one or more columns
            type:
              type: nullable
              underlying_type:
                type: array
                element_type:
                  type: named
                  name: Track_order_by
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Track_bool_exp
      Track_by_pk:
        description: "fetch data from the table: \"Track\" using primary key columns"
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track
        arguments:
          TrackId:
            type:
              type: named
              name: Int
      Track_stream:
        description: "fetch data from the table in a streaming manner: \"Track\""
        type:
          type: array
          element_type:
            type: named
            name: Track
        arguments:
          batch_size:
            description: maximum number of rows returned in a single batch
            type:
              type: named
              name: Int
          cursor:
            description: cursor to stream the results returned by the query
            type:
              type: array
              element_type:
                type: nullable
                underlying_type:
                  type: named
                  name: Track_stream_cursor_input
          where:
            description: filter the rows returned
            type:
              type: nullable
              underlying_type:
                type: named
                name: Track_bool_exp
    foreign_keys: {}
  timestamp_comparison_exp:
    description: "Boolean expression to compare columns of type \"timestamp\". All fields are combined with logical 'AND'."
    fields:
      _eq:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      _gt:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      _gte:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      _in:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: timestamp
      _is_null:
        type:
          type: nullable
          underlying_type:
            type: named
            name: Boolean
      _lt:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      _lte:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      _neq:
        type:
          type: nullable
          underlying_type:
            type: named
            name: timestamp
      _nin:
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: timestamp
    foreign_keys: {}
collections: []
functions:
  - name: Album
    description: "fetch data from the table: \"Album\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Album_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Album_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_bool_exp
    result_type:
      type: named
      name: _AlbumQueryResponse
  - name: Album_aggregate
    description: "fetch aggregated fields from the table: \"Album\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Album_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Album_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_bool_exp
    result_type:
      type: named
      name: _Album_aggregateQueryResponse
  - name: Album_by_pk
    description: "fetch data from the table: \"Album\" using primary key columns"
    arguments:
      AlbumId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _Album_by_pkQueryResponse
  - name: Artist
    description: "fetch data from the table: \"Artist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Artist_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Artist_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_bool_exp
    result_type:
      type: named
      name: _ArtistQueryResponse
  - name: Artist_aggregate
    description: "fetch aggregated fields from the table: \"Artist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Artist_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Artist_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_bool_exp
    result_type:
      type: named
      name: _Artist_aggregateQueryResponse
  - name: Artist_by_pk
    description: "fetch data from the table: \"Artist\" using primary key columns"
    arguments:
      ArtistId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _Artist_by_pkQueryResponse
  - name: Customer
    description: "fetch data from the table: \"Customer\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Customer_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Customer_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_bool_exp
    result_type:
      type: named
      name: _CustomerQueryResponse
  - name: Customer_aggregate
    description: "fetch aggregated fields from the table: \"Customer\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Customer_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Customer_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_bool_exp
    result_type:
      type: named
      name: _Customer_aggregateQueryResponse
  - name: Customer_by_pk
    description: "fetch data from the table: \"Customer\" using primary key columns"
    arguments:
      CustomerId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _Customer_by_pkQueryResponse
  - name: Employee
    description: "fetch data from the table: \"Employee\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Employee_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Employee_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_bool_exp
    result_type:
      type: named
      name: _EmployeeQueryResponse
  - name: Employee_aggregate
    description: "fetch aggregated fields from the table: \"Employee\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Employee_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Employee_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_bool_exp
    result_type:
      type: named
      name: _Employee_aggregateQueryResponse
  - name: Employee_by_pk
    description: "fetch data from the table: \"Employee\" using primary key columns"
    arguments:
      EmployeeId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _Employee_by_pkQueryResponse
  - name: Genre
    description: "fetch data from the table: \"Genre\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Genre_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Genre_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_bool_exp
    result_type:
      type: named
      name: _GenreQueryResponse
  - name: Genre_aggregate
    description: "fetch aggregated fields from the table: \"Genre\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Genre_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Genre_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_bool_exp
    result_type:
      type: named
      name: _Genre_aggregateQueryResponse
  - name: Genre_by_pk
    description: "fetch data from the table: \"Genre\" using primary key columns"
    arguments:
      GenreId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _Genre_by_pkQueryResponse
  - name: Invoice
    description: "fetch data from the table: \"Invoice\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Invoice_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Invoice_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_bool_exp
    result_type:
      type: named
      name: _InvoiceQueryResponse
  - name: InvoiceLine
    description: "fetch data from the table: \"InvoiceLine\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: InvoiceLine_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: InvoiceLine_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_bool_exp
    result_type:
      type: named
      name: _InvoiceLineQueryResponse
  - name: InvoiceLine_aggregate
    description: "fetch aggregated fields from the table: \"InvoiceLine\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: InvoiceLine_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: InvoiceLine_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_bool_exp
    result_type:
      type: named
      name: _InvoiceLine_aggregateQueryResponse
  - name: InvoiceLine_by_pk
    description: "fetch data from the table: \"InvoiceLine\" using primary key columns"
    arguments:
      InvoiceLineId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _InvoiceLine_by_pkQueryResponse
  - name: Invoice_aggregate
    description: "fetch aggregated fields from the table: \"Invoice\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Invoice_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Invoice_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_bool_exp
    result_type:
      type: named
      name: _Invoice_aggregateQueryResponse
  - name: Invoice_by_pk
    description: "fetch data from the table: \"Invoice\" using primary key columns"
    arguments:
      InvoiceId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _Invoice_by_pkQueryResponse
  - name: MediaType
    description: "fetch data from the table: \"MediaType\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: MediaType_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: MediaType_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_bool_exp
    result_type:
      type: named
      name: _MediaTypeQueryResponse
  - name: MediaType_aggregate
    description: "fetch aggregated fields from the table: \"MediaType\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: MediaType_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: MediaType_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_bool_exp
    result_type:
      type: named
      name: _MediaType_aggregateQueryResponse
  - name: MediaType_by_pk
    description: "fetch data from the table: \"MediaType\" using primary key columns"
    arguments:
      MediaTypeId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _MediaType_by_pkQueryResponse
  - name: Playlist
    description: "fetch data from the table: \"Playlist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Playlist_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Playlist_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_bool_exp
    result_type:
      type: named
      name: _PlaylistQueryResponse
  - name: PlaylistTrack
    description: "fetch data from the table: \"PlaylistTrack\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: PlaylistTrack_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: PlaylistTrack_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_bool_exp
    result_type:
      type: named
      name: _PlaylistTrackQueryResponse
  - name: PlaylistTrack_aggregate
    description: "fetch aggregated fields from the table: \"PlaylistTrack\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: PlaylistTrack_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: PlaylistTrack_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_bool_exp
    result_type:
      type: named
      name: _PlaylistTrack_aggregateQueryResponse
  - name: PlaylistTrack_by_pk
    description: "fetch data from the table: \"PlaylistTrack\" using primary key columns"
    arguments:
      PlaylistId:
        type:
          type: named
          name: Int
      TrackId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _PlaylistTrack_by_pkQueryResponse
  - name: Playlist_aggregate
    description: "fetch aggregated fields from the table: \"Playlist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Playlist_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Playlist_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_bool_exp
    result_type:
      type: named
      name: _Playlist_aggregateQueryResponse
  - name: Playlist_by_pk
    description: "fetch data from the table: \"Playlist\" using primary key columns"
    arguments:
      PlaylistId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _Playlist_by_pkQueryResponse
  - name: Track
    description: "fetch data from the table: \"Track\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Track_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Track_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_bool_exp
    result_type:
      type: named
      name: _TrackQueryResponse
  - name: Track_aggregate
    description: "fetch aggregated fields from the table: \"Track\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      distinct_on:
        description: distinct select on columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Track_select_column
      limit:
        description: limit the number of rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      offset:
        description: skip the first n rows. Use only with order_by
        type:
          type: nullable
          underlying_type:
            type: named
            name: Int
      order_by:
        description: sort the rows by one or more columns
        type:
          type: nullable
          underlying_type:
            type: array
            element_type:
              type: named
              name: Track_order_by
      where:
        description: filter the rows returned
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_bool_exp
    result_type:
      type: named
      name: _Track_aggregateQueryResponse
  - name: Track_by_pk
    description: "fetch data from the table: \"Track\" using primary key columns"
    arguments:
      TrackId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _Track_by_pkQueryResponse
procedures:
  - name: delete_Album
    description: "delete data from the table: \"Album\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: Album_bool_exp
    result_type:
      type: named
      name: _delete_AlbumMutationResponse
  - name: delete_Album_by_pk
    description: "delete single row from the table: \"Album\""
    arguments:
      AlbumId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_Album_by_pkMutationResponse
  - name: delete_Artist
    description: "delete data from the table: \"Artist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: Artist_bool_exp
    result_type:
      type: named
      name: _delete_ArtistMutationResponse
  - name: delete_Artist_by_pk
    description: "delete single row from the table: \"Artist\""
    arguments:
      ArtistId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_Artist_by_pkMutationResponse
  - name: delete_Customer
    description: "delete data from the table: \"Customer\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: Customer_bool_exp
    result_type:
      type: named
      name: _delete_CustomerMutationResponse
  - name: delete_Customer_by_pk
    description: "delete single row from the table: \"Customer\""
    arguments:
      CustomerId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_Customer_by_pkMutationResponse
  - name: delete_Employee
    description: "delete data from the table: \"Employee\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: Employee_bool_exp
    result_type:
      type: named
      name: _delete_EmployeeMutationResponse
  - name: delete_Employee_by_pk
    description: "delete single row from the table: \"Employee\""
    arguments:
      EmployeeId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_Employee_by_pkMutationResponse
  - name: delete_Genre
    description: "delete data from the table: \"Genre\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: Genre_bool_exp
    result_type:
      type: named
      name: _delete_GenreMutationResponse
  - name: delete_Genre_by_pk
    description: "delete single row from the table: \"Genre\""
    arguments:
      GenreId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_Genre_by_pkMutationResponse
  - name: delete_Invoice
    description: "delete data from the table: \"Invoice\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: Invoice_bool_exp
    result_type:
      type: named
      name: _delete_InvoiceMutationResponse
  - name: delete_InvoiceLine
    description: "delete data from the table: \"InvoiceLine\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: InvoiceLine_bool_exp
    result_type:
      type: named
      name: _delete_InvoiceLineMutationResponse
  - name: delete_InvoiceLine_by_pk
    description: "delete single row from the table: \"InvoiceLine\""
    arguments:
      InvoiceLineId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_InvoiceLine_by_pkMutationResponse
  - name: delete_Invoice_by_pk
    description: "delete single row from the table: \"Invoice\""
    arguments:
      InvoiceId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_Invoice_by_pkMutationResponse
  - name: delete_MediaType
    description: "delete data from the table: \"MediaType\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: MediaType_bool_exp
    result_type:
      type: named
      name: _delete_MediaTypeMutationResponse
  - name: delete_MediaType_by_pk
    description: "delete single row from the table: \"MediaType\""
    arguments:
      MediaTypeId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_MediaType_by_pkMutationResponse
  - name: delete_Playlist
    description: "delete data from the table: \"Playlist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: Playlist_bool_exp
    result_type:
      type: named
      name: _delete_PlaylistMutationResponse
  - name: delete_PlaylistTrack
    description: "delete data from the table: \"PlaylistTrack\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: PlaylistTrack_bool_exp
    result_type:
      type: named
      name: _delete_PlaylistTrackMutationResponse
  - name: delete_PlaylistTrack_by_pk
    description: "delete single row from the table: \"PlaylistTrack\""
    arguments:
      PlaylistId:
        type:
          type: named
          name: Int
      TrackId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_PlaylistTrack_by_pkMutationResponse
  - name: delete_Playlist_by_pk
    description: "delete single row from the table: \"Playlist\""
    arguments:
      PlaylistId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_Playlist_by_pkMutationResponse
  - name: delete_Track
    description: "delete data from the table: \"Track\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      where:
        description: filter the rows which have to be deleted
        type:
          type: named
          name: Track_bool_exp
    result_type:
      type: named
      name: _delete_TrackMutationResponse
  - name: delete_Track_by_pk
    description: "delete single row from the table: \"Track\""
    arguments:
      TrackId:
        type:
          type: named
          name: Int
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
    result_type:
      type: named
      name: _delete_Track_by_pkMutationResponse
  - name: insert_Album
    description: "insert data into the table: \"Album\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: Album_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_on_conflict
    result_type:
      type: named
      name: _insert_AlbumMutationResponse
  - name: insert_Album_one
    description: "insert a single row into the table: \"Album\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: Album_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_on_conflict
    result_type:
      type: named
      name: _insert_Album_oneMutationResponse
  - name: insert_Artist
    description: "insert data into the table: \"Artist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: Artist_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_on_conflict
    result_type:
      type: named
      name: _insert_ArtistMutationResponse
  - name: insert_Artist_one
    description: "insert a single row into the table: \"Artist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: Artist_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_on_conflict
    result_type:
      type: named
      name: _insert_Artist_oneMutationResponse
  - name: insert_Customer
    description: "insert data into the table: \"Customer\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: Customer_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_on_conflict
    result_type:
      type: named
      name: _insert_CustomerMutationResponse
  - name: insert_Customer_one
    description: "insert a single row into the table: \"Customer\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: Customer_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_on_conflict
    result_type:
      type: named
      name: _insert_Customer_oneMutationResponse
  - name: insert_Employee
    description: "insert data into the table: \"Employee\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: Employee_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_on_conflict
    result_type:
      type: named
      name: _insert_EmployeeMutationResponse
  - name: insert_Employee_one
    description: "insert a single row into the table: \"Employee\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: Employee_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_on_conflict
    result_type:
      type: named
      name: _insert_Employee_oneMutationResponse
  - name: insert_Genre
    description: "insert data into the table: \"Genre\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: Genre_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_on_conflict
    result_type:
      type: named
      name: _insert_GenreMutationResponse
  - name: insert_Genre_one
    description: "insert a single row into the table: \"Genre\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: Genre_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_on_conflict
    result_type:
      type: named
      name: _insert_Genre_oneMutationResponse
  - name: insert_Invoice
    description: "insert data into the table: \"Invoice\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: Invoice_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_on_conflict
    result_type:
      type: named
      name: _insert_InvoiceMutationResponse
  - name: insert_InvoiceLine
    description: "insert data into the table: \"InvoiceLine\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_on_conflict
    result_type:
      type: named
      name: _insert_InvoiceLineMutationResponse
  - name: insert_InvoiceLine_one
    description: "insert a single row into the table: \"InvoiceLine\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: InvoiceLine_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_on_conflict
    result_type:
      type: named
      name: _insert_InvoiceLine_oneMutationResponse
  - name: insert_Invoice_one
    description: "insert a single row into the table: \"Invoice\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: Invoice_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_on_conflict
    result_type:
      type: named
      name: _insert_Invoice_oneMutationResponse
  - name: insert_MediaType
    description: "insert data into the table: \"MediaType\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: MediaType_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_on_conflict
    result_type:
      type: named
      name: _insert_MediaTypeMutationResponse
  - name: insert_MediaType_one
    description: "insert a single row into the table: \"MediaType\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: MediaType_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_on_conflict
    result_type:
      type: named
      name: _insert_MediaType_oneMutationResponse
  - name: insert_Playlist
    description: "insert data into the table: \"Playlist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: Playlist_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_on_conflict
    result_type:
      type: named
      name: _insert_PlaylistMutationResponse
  - name: insert_PlaylistTrack
    description: "insert data into the table: \"PlaylistTrack\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_on_conflict
    result_type:
      type: named
      name: _insert_PlaylistTrackMutationResponse
  - name: insert_PlaylistTrack_one
    description: "insert a single row into the table: \"PlaylistTrack\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: PlaylistTrack_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_on_conflict
    result_type:
      type: named
      name: _insert_PlaylistTrack_oneMutationResponse
  - name: insert_Playlist_one
    description: "insert a single row into the table: \"Playlist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: Playlist_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_on_conflict
    result_type:
      type: named
      name: _insert_Playlist_oneMutationResponse
  - name: insert_Track
    description: "insert data into the table: \"Track\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      objects:
        description: the rows to be inserted
        type:
          type: array
          element_type:
            type: named
            name: Track_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_on_conflict
    result_type:
      type: named
      name: _insert_TrackMutationResponse
  - name: insert_Track_one
    description: "insert a single row into the table: \"Track\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      object:
        description: the row to be inserted
        type:
          type: named
          name: Track_insert_input
      on_conflict:
        description: upsert condition
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_on_conflict
    result_type:
      type: named
      name: _insert_Track_oneMutationResponse
  - name: update_Album
    description: "update data of the table: \"Album\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Album_bool_exp
    result_type:
      type: named
      name: _update_AlbumMutationResponse
  - name: update_Album_by_pk
    description: "update single row of the table: \"Album\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Album_set_input
      pk_columns:
        type:
          type: named
          name: Album_pk_columns_input
    result_type:
      type: named
      name: _update_Album_by_pkMutationResponse
  - name: update_Album_many
    description: "update multiples rows of table: \"Album\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: Album_updates
    result_type:
      type: named
      name: _update_Album_manyMutationResponse
  - name: update_Artist
    description: "update data of the table: \"Artist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Artist_bool_exp
    result_type:
      type: named
      name: _update_ArtistMutationResponse
  - name: update_Artist_by_pk
    description: "update single row of the table: \"Artist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Artist_set_input
      pk_columns:
        type:
          type: named
          name: Artist_pk_columns_input
    result_type:
      type: named
      name: _update_Artist_by_pkMutationResponse
  - name: update_Artist_many
    description: "update multiples rows of table: \"Artist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: Artist_updates
    result_type:
      type: named
      name: _update_Artist_manyMutationResponse
  - name: update_Customer
    description: "update data of the table: \"Customer\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Customer_bool_exp
    result_type:
      type: named
      name: _update_CustomerMutationResponse
  - name: update_Customer_by_pk
    description: "update single row of the table: \"Customer\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Customer_set_input
      pk_columns:
        type:
          type: named
          name: Customer_pk_columns_input
    result_type:
      type: named
      name: _update_Customer_by_pkMutationResponse
  - name: update_Customer_many
    description: "update multiples rows of table: \"Customer\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: Customer_updates
    result_type:
      type: named
      name: _update_Customer_manyMutationResponse
  - name: update_Employee
    description: "update data of the table: \"Employee\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Employee_bool_exp
    result_type:
      type: named
      name: _update_EmployeeMutationResponse
  - name: update_Employee_by_pk
    description: "update single row of the table: \"Employee\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Employee_set_input
      pk_columns:
        type:
          type: named
          name: Employee_pk_columns_input
    result_type:
      type: named
      name: _update_Employee_by_pkMutationResponse
  - name: update_Employee_many
    description: "update multiples rows of table: \"Employee\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: Employee_updates
    result_type:
      type: named
      name: _update_Employee_manyMutationResponse
  - name: update_Genre
    description: "update data of the table: \"Genre\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Genre_bool_exp
    result_type:
      type: named
      name: _update_GenreMutationResponse
  - name: update_Genre_by_pk
    description: "update single row of the table: \"Genre\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Genre_set_input
      pk_columns:
        type:
          type: named
          name: Genre_pk_columns_input
    result_type:
      type: named
      name: _update_Genre_by_pkMutationResponse
  - name: update_Genre_many
    description: "update multiples rows of table: \"Genre\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: Genre_updates
    result_type:
      type: named
      name: _update_Genre_manyMutationResponse
  - name: update_Invoice
    description: "update data of the table: \"Invoice\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Invoice_bool_exp
    result_type:
      type: named
      name: _update_InvoiceMutationResponse
  - name: update_InvoiceLine
    description: "update data of the table: \"InvoiceLine\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: InvoiceLine_bool_exp
    result_type:
      type: named
      name: _update_InvoiceLineMutationResponse
  - name: update_InvoiceLine_by_pk
    description: "update single row of the table: \"InvoiceLine\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: InvoiceLine_set_input
      pk_columns:
        type:
          type: named
          name: InvoiceLine_pk_columns_input
    result_type:
      type: named
      name: _update_InvoiceLine_by_pkMutationResponse
  - name: update_InvoiceLine_many
    description: "update multiples rows of table: \"InvoiceLine\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: InvoiceLine_updates
    result_type:
      type: named
      name: _update_InvoiceLine_manyMutationResponse
  - name: update_Invoice_by_pk
    description: "update single row of the table: \"Invoice\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Invoice_set_input
      pk_columns:
        type:
          type: named
          name: Invoice_pk_columns_input
    result_type:
      type: named
      name: _update_Invoice_by_pkMutationResponse
  - name: update_Invoice_many
    description: "update multiples rows of table: \"Invoice\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: Invoice_updates
    result_type:
      type: named
      name: _update_Invoice_manyMutationResponse
  - name: update_MediaType
    description: "update data of the table: \"MediaType\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: MediaType_bool_exp
    result_type:
      type: named
      name: _update_MediaTypeMutationResponse
  - name: update_MediaType_by_pk
    description: "update single row of the table: \"MediaType\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: MediaType_set_input
      pk_columns:
        type:
          type: named
          name: MediaType_pk_columns_input
    result_type:
      type: named
      name: _update_MediaType_by_pkMutationResponse
  - name: update_MediaType_many
    description: "update multiples rows of table: \"MediaType\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: MediaType_updates
    result_type:
      type: named
      name: _update_MediaType_manyMutationResponse
  - name: update_Playlist
    description: "update data of the table: \"Playlist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Playlist_bool_exp
    result_type:
      type: named
      name: _update_PlaylistMutationResponse
  - name: update_PlaylistTrack
    description: "update data of the table: \"PlaylistTrack\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: PlaylistTrack_bool_exp
    result_type:
      type: named
      name: _update_PlaylistTrackMutationResponse
  - name: update_PlaylistTrack_by_pk
    description: "update single row of the table: \"PlaylistTrack\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: PlaylistTrack_set_input
      pk_columns:
        type:
          type: named
          name: PlaylistTrack_pk_columns_input
    result_type:
      type: named
      name: _update_PlaylistTrack_by_pkMutationResponse
  - name: update_PlaylistTrack_many
    description: "update multiples rows of table: \"PlaylistTrack\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: PlaylistTrack_updates
    result_type:
      type: named
      name: _update_PlaylistTrack_manyMutationResponse
  - name: update_Playlist_by_pk
    description: "update single row of the table: \"Playlist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Playlist_set_input
      pk_columns:
        type:
          type: named
          name: Playlist_pk_columns_input
    result_type:
      type: named
      name: _update_Playlist_by_pkMutationResponse
  - name: update_Playlist_many
    description: "update multiples rows of table: \"Playlist\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: Playlist_updates
    result_type:
      type: named
      name: _update_Playlist_manyMutationResponse
  - name: update_Track
    description: "update data of the table: \"Track\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_set_input
      where:
        description: filter the rows which have to be updated
        type:
          type: named
          name: Track_bool_exp
    result_type:
      type: named
      name: _update_TrackMutationResponse
  - name: update_Track_by_pk
    description: "update single row of the table: \"Track\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      _inc:
        description: increments the numeric columns with given value of the filtered values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_inc_input
      _set:
        description: sets the columns of the filtered rows to the given values
        type:
          type: nullable
          underlying_type:
            type: named
            name: Track_set_input
      pk_columns:
        type:
          type: named
          name: Track_pk_columns_input
    result_type:
      type: named
      name: _update_Track_by_pkMutationResponse
  - name: update_Track_many
    description: "update multiples rows of table: \"Track\""
    arguments:
      _forwarded_headers:
        type:
          type: named
          name: _HeaderMap
      updates:
        description: "updates to execute, in order"
        type:
          type: array
          element_type:
            type: named
            name: Track_updates
    result_type:
      type: named
      name: _update_Track_manyMutationResponse
capabilities: ~
request_arguments: ~
